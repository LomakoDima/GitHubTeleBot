import os
import aiohttp
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from config import *




bot = Bot(token=TOKEN)
dp = Dispatcher()

logging.basicConfig(level=logging.INFO)

@dp.message(Command("start"))
async def send_welcome(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub, –∏ —è –ø–æ–∫–∞–∂—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.")

@dp.message()
async def get_github_user(message: Message):
    username = message.text.strip()
    async with aiohttp.ClientSession() as session:
        async with session.get(f"{GITHUB_API_URL}/users/{username}") as response:
            if response.status == 200:
                data = await response.json()
                user_info = (f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data['login']}\n"
                             f"üîó –ü—Ä–æ—Ñ–∏–ª—å: {data['html_url']}\n"
                             f"üìú –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏: {data['public_repos']}\n"
                             f"üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {data['followers']}\n"
                             f"üåü –ü–æ–¥–ø–∏—Å–∫–∏: {data['following']}")
                await message.reply(user_info)
            else:
                await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())